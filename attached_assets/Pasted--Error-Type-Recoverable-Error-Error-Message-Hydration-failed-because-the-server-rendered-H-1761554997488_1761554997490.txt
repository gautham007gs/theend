## Error Type
Recoverable Error

## Error Message
Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HotReload assetPrefix="" globalError={[...]}>
      <AppDevOverlayErrorBoundary globalError={[...]}>
        <ReplaySsrOnlyErrors>
        <DevRootHTTPAccessFallbackBoundary>
          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>
            <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<NotAllowedRootHTTPFallbackError>} ...>
              <RedirectBoundary>
                <RedirectErrorBoundary router={{...}}>
                  <Head>
                  <__next_root_layout_boundary__>
                    <SegmentViewNode type="layout" pagePath="layout.tsx">
                      <SegmentTrieNode>
                      <link>
                      <script>
                      <script>
                      <script>
                      <script>
                      <RootLayout>
                        <html lang="en" suppressHydrationWarning={true} data-scroll-behavior="smooth">
                          <head>
                            <meta>
                            <meta>
                            <meta>
                            <meta>
                            <meta>
                            <meta>
                            <meta>
                            <meta>
                            <link>
                            <script>
                            <script
                              dangerouslySetInnerHTML={{
+                               __html: "\n              window.dataLayer = window.dataLayer || [];\n              fun..."
-                               __html: ""
                              }}
-                             src="/__replco/static/devtools/injected.js"
-                             onerror={"parent.postMessage({event:'error',payload:'script.onerror: Failed to load '+e..."}
                            >
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <link>
                            <StructuredData>
+                           <script type="application/ld+json" dangerouslySetInnerHTML={{__html:"{\"@contex..."}}>
-                           {"\n"}
                          ...
                  ...



    at script (<anonymous>:null:null)
    at RootLayout (src/app/layout.tsx:167:9)

## Code Frame
  165 |         
  166 |         {/* Enhanced structured data for better search visibility */}
> 167 |         <script
      |         ^
  168 |           type="application/ld+json"
  169 |           dangerouslySetInnerHTML={{
  170 |             __html: JSON.stringify({

Next.js version: 15.5.6 (Turbopack)
